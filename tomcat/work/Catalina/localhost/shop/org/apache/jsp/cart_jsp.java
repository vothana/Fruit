/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.79
 * Generated at: 2022-11-24 16:07:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.HashMap;
import entity.Music;
import java.util.ArrayList;
import java.util.ArrayList;
import java.util.List;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("entity.Music");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        ");
      order.orderList bean = null;
      bean = (order.orderList) _jspx_page_context.getAttribute("bean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (bean == null){
        bean = new order.orderList();
        _jspx_page_context.setAttribute("bean", bean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("         ");
      entity.addMusic musicBean = null;
      musicBean = (entity.addMusic) _jspx_page_context.getAttribute("musicBean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (musicBean == null){
        musicBean = new entity.addMusic();
        _jspx_page_context.setAttribute("musicBean", musicBean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <style>\n");
      out.write("        .link{\n");
      out.write("            text-decoration: none;\n");
      out.write("            padding: 10px;\n");
      out.write("            border: 1px solid grey;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            margin-left: 10px;\n");
      out.write("        }\n");
      out.write("        .link:hover{\n");
      out.write("            background-color: green;\n");
      out.write("            color: #FFF;\n");
      out.write("        }\n");
      out.write("        .div{\n");
      out.write("            width: 100%;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"div\">\n");
      out.write("            <h1>Content of Shopping Cart</h1>\n");
      out.write("            <h4>So far you have selected the following music from us</h4>\n");
      out.write("            ");

                String musicName = "";
                String listOfMusics[] = null;
                List<Music> musicList = musicBean.musicList();
                ArrayList<Music> musices = new ArrayList<>(musicList.size());
                musices.addAll(musicList);

                if(request.getParameter("music") != null){
                    for(int i=1 ; i <= musices.size() ; i++){
                        if(i == Integer.parseInt(request.getParameter("music"))){
                            musicName = musicBean.musicListKEY(musices).get(i);
                            break;
                        }
                    }
                    listOfMusics = bean.orderList(musicName);
                }else{
                    listOfMusics = bean.orderList("0");
                }
                
                if(listOfMusics != null)
                    for(String music: listOfMusics){
                        if(music != null)
                            out.print(music + "<br><br>");
                    }
                else
                    out.print("Something wrong !");
    //            out.println(musices.size());
    //            out.println("musicName" + musicName);
    //            out.println(Integer.parseInt(request.getParameter("music")));
    //            out.println(musicBean.musicListKEY(musices));
    //            out.println(musicBean.musicListKEY(musices).get(2));
    //            out.println(((Object)(musicBean.musicListKEY(musices).get(2))).getClass().getSimpleName());
            
      out.write("\n");
      out.write("            <br>\n");
      out.write("            <br>\n");
      out.write("            <div>\n");
      out.write("            <a class=\"link\" href=\"home.jsp\">make another pick</a>\n");
      out.write("            <a class=\"link\" href=\"checkOut.jsp\">proceed to checkout </a>\n");
      out.write("            <a class=\"link\" href=\"clearOrder.jsp\">clear selection</a>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("    <script>\n");
      out.write("        window.history.replaceState({}, document.title, \"/\" + \"shop/cart.jsp\");\n");
      out.write("    </script>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
